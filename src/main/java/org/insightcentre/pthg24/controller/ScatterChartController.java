package org.insightcentre.pthg24.controller;

import java.lang.Exception;
import java.lang.Number;
import java.lang.Object;
import java.lang.String;
import java.lang.SuppressWarnings;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.fxml.FXML;
import javafx.scene.chart.ScatterChart;
import javafx.scene.chart.XYChart;

/**
 * Generated at 11:17:58 on 2024-06-04 */
public class ScatterChartController extends ChartXYFilterController {
	@FXML
	private ScatterChart<Number, Number> chart;

	@FXML
	@SuppressWarnings("unchecked")
	private void initialize() {
		ObservableList<String> attributeNames = FXCollections.observableArrayList();
		ObservableList<String> filterNames = FXCollections.observableArrayList();
		filterNames.add(filterNone);
		filterNames.add("name");
		filterNames.add("dirty");
		filterNames.add("valid");
		filterNames.add("name");
		filterNames.add("type");
		filterNames.add("item");
		filterNames.add("classString");
		filterNames.add("name");
		filterNames.add("attrString");
		filterNames.add("item");
		filterNames.add("type");
		filterNames.add("limit");
		filterNames.add("name");
		filterNames.add("name");
		filterNames.add("shortName");
		filterNames.add("conceptType");
		filterNames.add("label");
		filterNames.add("regExpr");
		filterNames.add("caseSensitive");
		attributeNames.add("revision");
		filterNames.add("revision");
		attributeNames.add("weight");
		filterNames.add("weight");
		attributeNames.add("nrOccurrences");
		filterNames.add("nrOccurrences");
		choicesMap.put("Concept", attributeNames);
		filterMap.put("Concept", filterNames);
		attributeNames = FXCollections.observableArrayList();
		filterNames = FXCollections.observableArrayList();
		filterNames.add(filterNone);
		filterNames.add("name");
		filterNames.add("shortName");
		filterNames.add("conceptType");
		filterNames.add("label");
		filterNames.add("regExpr");
		filterNames.add("caseSensitive");
		attributeNames.add("revision");
		filterNames.add("revision");
		attributeNames.add("weight");
		filterNames.add("weight");
		attributeNames.add("nrOccurrences");
		filterNames.add("nrOccurrences");
		filterNames.add("description");
		choicesMap.put("Acronym", attributeNames);
		filterMap.put("Acronym", filterNames);
		attributeNames = FXCollections.observableArrayList();
		filterNames = FXCollections.observableArrayList();
		filterNames.add(filterNone);
		filterNames.add("name");
		filterNames.add("shortName");
		filterNames.add("familyName");
		filterNames.add("crossFamily");
		filterNames.add("crossGiven");
		filterNames.add("orcid");
		filterNames.add("key");
		attributeNames.add("nrWorks");
		filterNames.add("nrWorks");
		attributeNames.add("nrCitations");
		filterNames.add("nrCitations");
		attributeNames.add("nrBackgroundWorks");
		filterNames.add("nrBackgroundWorks");
		attributeNames.add("nrBackgroundCitations");
		filterNames.add("nrBackgroundCitations");
		choicesMap.put("Author", attributeNames);
		filterMap.put("Author", filterNames);
		attributeNames = FXCollections.observableArrayList();
		filterNames = FXCollections.observableArrayList();
		filterNames.add(filterNone);
		filterNames.add("name");
		filterNames.add("shortName");
		attributeNames.add("nr");
		filterNames.add("nr");
		attributeNames.add("nrEdges");
		filterNames.add("nrEdges");
		attributeNames.add("cluster");
		filterNames.add("cluster");
		filterNames.add("key");
		filterNames.add("author");
		filterNames.add("authors");
		filterNames.add("title");
		filterNames.add("publisher");
		filterNames.add("url");
		filterNames.add("doi");
		filterNames.add("issn");
		filterNames.add("localCopy");
		attributeNames.add("year");
		filterNames.add("year");
		filterNames.add("pages");
		attributeNames.add("nrPages");
		filterNames.add("nrPages");
		attributeNames.add("nrHyperLinks");
		filterNames.add("nrHyperLinks");
		filterNames.add("background");
		filterNames.add("sourceGroup");
		filterNames.add("dataAvail");
		filterNames.add("codeAvail");
		filterNames.add("solutionAvail");
		filterNames.add("cpSystem");
		filterNames.add("classification");
		filterNames.add("constraints");
		filterNames.add("relatedTo");
		filterNames.add("openAccess");
		filterNames.add("openAccessType");
		attributeNames.add("nrConcepts");
		filterNames.add("nrConcepts");
		attributeNames.add("nrCitations");
		filterNames.add("nrCitations");
		attributeNames.add("nrReferences");
		filterNames.add("nrReferences");
		attributeNames.add("crossrefCitations");
		filterNames.add("crossrefCitations");
		attributeNames.add("crossrefReferences");
		filterNames.add("crossrefReferences");
		attributeNames.add("wosCitations");
		filterNames.add("wosCitations");
		attributeNames.add("wosReferences");
		filterNames.add("wosReferences");
		attributeNames.add("scopusCitations");
		filterNames.add("scopusCitations");
		attributeNames.add("nrCitationsCovered");
		filterNames.add("nrCitationsCovered");
		attributeNames.add("nrReferencesCovered");
		filterNames.add("nrReferencesCovered");
		attributeNames.add("percentCitationsCovered");
		filterNames.add("percentCitationsCovered");
		attributeNames.add("percentReferencesCovered");
		filterNames.add("percentReferencesCovered");
		attributeNames.add("maxCitations");
		filterNames.add("maxCitations");
		attributeNames.add("rangeCitations");
		filterNames.add("rangeCitations");
		filterNames.add("doiStatus");
		filterNames.add("crossrefStatus");
		filterNames.add("scopusStatus");
		filterNames.add("wosStatus");
		attributeNames.add("relevanceTitle");
		filterNames.add("relevanceTitle");
		attributeNames.add("relevanceAbstract");
		filterNames.add("relevanceAbstract");
		attributeNames.add("relevanceBody");
		filterNames.add("relevanceBody");
		filterNames.add("language");
		filterNames.add("keywords");
		filterNames.add("abstractText");
		filterNames.add("concept");
		choicesMap.put("Work", attributeNames);
		filterMap.put("Work", filterNames);
		attributeNames = FXCollections.observableArrayList();
		filterNames = FXCollections.observableArrayList();
		filterNames.add(filterNone);
		filterNames.add("name");
		filterNames.add("shortName");
		attributeNames.add("nr");
		filterNames.add("nr");
		attributeNames.add("nrEdges");
		filterNames.add("nrEdges");
		attributeNames.add("cluster");
		filterNames.add("cluster");
		filterNames.add("key");
		filterNames.add("author");
		filterNames.add("authors");
		filterNames.add("title");
		filterNames.add("publisher");
		filterNames.add("url");
		filterNames.add("doi");
		filterNames.add("issn");
		filterNames.add("localCopy");
		attributeNames.add("year");
		filterNames.add("year");
		filterNames.add("pages");
		attributeNames.add("nrPages");
		filterNames.add("nrPages");
		attributeNames.add("nrHyperLinks");
		filterNames.add("nrHyperLinks");
		filterNames.add("background");
		filterNames.add("sourceGroup");
		filterNames.add("dataAvail");
		filterNames.add("codeAvail");
		filterNames.add("solutionAvail");
		filterNames.add("cpSystem");
		filterNames.add("classification");
		filterNames.add("constraints");
		filterNames.add("relatedTo");
		filterNames.add("openAccess");
		filterNames.add("openAccessType");
		attributeNames.add("nrConcepts");
		filterNames.add("nrConcepts");
		attributeNames.add("nrCitations");
		filterNames.add("nrCitations");
		attributeNames.add("nrReferences");
		filterNames.add("nrReferences");
		attributeNames.add("crossrefCitations");
		filterNames.add("crossrefCitations");
		attributeNames.add("crossrefReferences");
		filterNames.add("crossrefReferences");
		attributeNames.add("wosCitations");
		filterNames.add("wosCitations");
		attributeNames.add("wosReferences");
		filterNames.add("wosReferences");
		attributeNames.add("scopusCitations");
		filterNames.add("scopusCitations");
		attributeNames.add("nrCitationsCovered");
		filterNames.add("nrCitationsCovered");
		attributeNames.add("nrReferencesCovered");
		filterNames.add("nrReferencesCovered");
		attributeNames.add("percentCitationsCovered");
		filterNames.add("percentCitationsCovered");
		attributeNames.add("percentReferencesCovered");
		filterNames.add("percentReferencesCovered");
		attributeNames.add("maxCitations");
		filterNames.add("maxCitations");
		attributeNames.add("rangeCitations");
		filterNames.add("rangeCitations");
		filterNames.add("doiStatus");
		filterNames.add("crossrefStatus");
		filterNames.add("scopusStatus");
		filterNames.add("wosStatus");
		attributeNames.add("relevanceTitle");
		filterNames.add("relevanceTitle");
		attributeNames.add("relevanceAbstract");
		filterNames.add("relevanceAbstract");
		attributeNames.add("relevanceBody");
		filterNames.add("relevanceBody");
		filterNames.add("language");
		filterNames.add("keywords");
		filterNames.add("abstractText");
		filterNames.add("concept");
		filterNames.add("proceedings");
		choicesMap.put("Paper", attributeNames);
		filterMap.put("Paper", filterNames);
		attributeNames = FXCollections.observableArrayList();
		filterNames = FXCollections.observableArrayList();
		filterNames.add(filterNone);
		filterNames.add("name");
		filterNames.add("shortName");
		attributeNames.add("nr");
		filterNames.add("nr");
		attributeNames.add("nrEdges");
		filterNames.add("nrEdges");
		attributeNames.add("cluster");
		filterNames.add("cluster");
		filterNames.add("key");
		filterNames.add("author");
		filterNames.add("authors");
		filterNames.add("title");
		filterNames.add("publisher");
		filterNames.add("url");
		filterNames.add("doi");
		filterNames.add("issn");
		filterNames.add("localCopy");
		attributeNames.add("year");
		filterNames.add("year");
		filterNames.add("pages");
		attributeNames.add("nrPages");
		filterNames.add("nrPages");
		attributeNames.add("nrHyperLinks");
		filterNames.add("nrHyperLinks");
		filterNames.add("background");
		filterNames.add("sourceGroup");
		filterNames.add("dataAvail");
		filterNames.add("codeAvail");
		filterNames.add("solutionAvail");
		filterNames.add("cpSystem");
		filterNames.add("classification");
		filterNames.add("constraints");
		filterNames.add("relatedTo");
		filterNames.add("openAccess");
		filterNames.add("openAccessType");
		attributeNames.add("nrConcepts");
		filterNames.add("nrConcepts");
		attributeNames.add("nrCitations");
		filterNames.add("nrCitations");
		attributeNames.add("nrReferences");
		filterNames.add("nrReferences");
		attributeNames.add("crossrefCitations");
		filterNames.add("crossrefCitations");
		attributeNames.add("crossrefReferences");
		filterNames.add("crossrefReferences");
		attributeNames.add("wosCitations");
		filterNames.add("wosCitations");
		attributeNames.add("wosReferences");
		filterNames.add("wosReferences");
		attributeNames.add("scopusCitations");
		filterNames.add("scopusCitations");
		attributeNames.add("nrCitationsCovered");
		filterNames.add("nrCitationsCovered");
		attributeNames.add("nrReferencesCovered");
		filterNames.add("nrReferencesCovered");
		attributeNames.add("percentCitationsCovered");
		filterNames.add("percentCitationsCovered");
		attributeNames.add("percentReferencesCovered");
		filterNames.add("percentReferencesCovered");
		attributeNames.add("maxCitations");
		filterNames.add("maxCitations");
		attributeNames.add("rangeCitations");
		filterNames.add("rangeCitations");
		filterNames.add("doiStatus");
		filterNames.add("crossrefStatus");
		filterNames.add("scopusStatus");
		filterNames.add("wosStatus");
		attributeNames.add("relevanceTitle");
		filterNames.add("relevanceTitle");
		attributeNames.add("relevanceAbstract");
		filterNames.add("relevanceAbstract");
		attributeNames.add("relevanceBody");
		filterNames.add("relevanceBody");
		filterNames.add("language");
		filterNames.add("keywords");
		filterNames.add("abstractText");
		filterNames.add("concept");
		filterNames.add("journal");
		choicesMap.put("Article", attributeNames);
		filterMap.put("Article", filterNames);
		attributeNames = FXCollections.observableArrayList();
		filterNames = FXCollections.observableArrayList();
		filterNames.add(filterNone);
		filterNames.add("name");
		filterNames.add("shortName");
		attributeNames.add("nr");
		filterNames.add("nr");
		attributeNames.add("nrEdges");
		filterNames.add("nrEdges");
		attributeNames.add("cluster");
		filterNames.add("cluster");
		filterNames.add("key");
		filterNames.add("author");
		filterNames.add("authors");
		filterNames.add("title");
		filterNames.add("publisher");
		filterNames.add("url");
		filterNames.add("doi");
		filterNames.add("issn");
		filterNames.add("localCopy");
		attributeNames.add("year");
		filterNames.add("year");
		filterNames.add("pages");
		attributeNames.add("nrPages");
		filterNames.add("nrPages");
		attributeNames.add("nrHyperLinks");
		filterNames.add("nrHyperLinks");
		filterNames.add("background");
		filterNames.add("sourceGroup");
		filterNames.add("dataAvail");
		filterNames.add("codeAvail");
		filterNames.add("solutionAvail");
		filterNames.add("cpSystem");
		filterNames.add("classification");
		filterNames.add("constraints");
		filterNames.add("relatedTo");
		filterNames.add("openAccess");
		filterNames.add("openAccessType");
		attributeNames.add("nrConcepts");
		filterNames.add("nrConcepts");
		attributeNames.add("nrCitations");
		filterNames.add("nrCitations");
		attributeNames.add("nrReferences");
		filterNames.add("nrReferences");
		attributeNames.add("crossrefCitations");
		filterNames.add("crossrefCitations");
		attributeNames.add("crossrefReferences");
		filterNames.add("crossrefReferences");
		attributeNames.add("wosCitations");
		filterNames.add("wosCitations");
		attributeNames.add("wosReferences");
		filterNames.add("wosReferences");
		attributeNames.add("scopusCitations");
		filterNames.add("scopusCitations");
		attributeNames.add("nrCitationsCovered");
		filterNames.add("nrCitationsCovered");
		attributeNames.add("nrReferencesCovered");
		filterNames.add("nrReferencesCovered");
		attributeNames.add("percentCitationsCovered");
		filterNames.add("percentCitationsCovered");
		attributeNames.add("percentReferencesCovered");
		filterNames.add("percentReferencesCovered");
		attributeNames.add("maxCitations");
		filterNames.add("maxCitations");
		attributeNames.add("rangeCitations");
		filterNames.add("rangeCitations");
		filterNames.add("doiStatus");
		filterNames.add("crossrefStatus");
		filterNames.add("scopusStatus");
		filterNames.add("wosStatus");
		attributeNames.add("relevanceTitle");
		filterNames.add("relevanceTitle");
		attributeNames.add("relevanceAbstract");
		filterNames.add("relevanceAbstract");
		attributeNames.add("relevanceBody");
		filterNames.add("relevanceBody");
		filterNames.add("language");
		filterNames.add("keywords");
		filterNames.add("abstractText");
		filterNames.add("concept");
		filterNames.add("school");
		choicesMap.put("PhDThesis", attributeNames);
		filterMap.put("PhDThesis", filterNames);
		attributeNames = FXCollections.observableArrayList();
		filterNames = FXCollections.observableArrayList();
		filterNames.add(filterNone);
		filterNames.add("name");
		filterNames.add("shortName");
		attributeNames.add("nr");
		filterNames.add("nr");
		attributeNames.add("nrEdges");
		filterNames.add("nrEdges");
		attributeNames.add("cluster");
		filterNames.add("cluster");
		filterNames.add("key");
		filterNames.add("author");
		filterNames.add("authors");
		filterNames.add("title");
		filterNames.add("publisher");
		filterNames.add("url");
		filterNames.add("doi");
		filterNames.add("issn");
		filterNames.add("localCopy");
		attributeNames.add("year");
		filterNames.add("year");
		filterNames.add("pages");
		attributeNames.add("nrPages");
		filterNames.add("nrPages");
		attributeNames.add("nrHyperLinks");
		filterNames.add("nrHyperLinks");
		filterNames.add("background");
		filterNames.add("sourceGroup");
		filterNames.add("dataAvail");
		filterNames.add("codeAvail");
		filterNames.add("solutionAvail");
		filterNames.add("cpSystem");
		filterNames.add("classification");
		filterNames.add("constraints");
		filterNames.add("relatedTo");
		filterNames.add("openAccess");
		filterNames.add("openAccessType");
		attributeNames.add("nrConcepts");
		filterNames.add("nrConcepts");
		attributeNames.add("nrCitations");
		filterNames.add("nrCitations");
		attributeNames.add("nrReferences");
		filterNames.add("nrReferences");
		attributeNames.add("crossrefCitations");
		filterNames.add("crossrefCitations");
		attributeNames.add("crossrefReferences");
		filterNames.add("crossrefReferences");
		attributeNames.add("wosCitations");
		filterNames.add("wosCitations");
		attributeNames.add("wosReferences");
		filterNames.add("wosReferences");
		attributeNames.add("scopusCitations");
		filterNames.add("scopusCitations");
		attributeNames.add("nrCitationsCovered");
		filterNames.add("nrCitationsCovered");
		attributeNames.add("nrReferencesCovered");
		filterNames.add("nrReferencesCovered");
		attributeNames.add("percentCitationsCovered");
		filterNames.add("percentCitationsCovered");
		attributeNames.add("percentReferencesCovered");
		filterNames.add("percentReferencesCovered");
		attributeNames.add("maxCitations");
		filterNames.add("maxCitations");
		attributeNames.add("rangeCitations");
		filterNames.add("rangeCitations");
		filterNames.add("doiStatus");
		filterNames.add("crossrefStatus");
		filterNames.add("scopusStatus");
		filterNames.add("wosStatus");
		attributeNames.add("relevanceTitle");
		filterNames.add("relevanceTitle");
		attributeNames.add("relevanceAbstract");
		filterNames.add("relevanceAbstract");
		attributeNames.add("relevanceBody");
		filterNames.add("relevanceBody");
		filterNames.add("language");
		filterNames.add("keywords");
		filterNames.add("abstractText");
		filterNames.add("concept");
		filterNames.add("collection");
		choicesMap.put("InCollection", attributeNames);
		filterMap.put("InCollection", filterNames);
		attributeNames = FXCollections.observableArrayList();
		filterNames = FXCollections.observableArrayList();
		filterNames.add(filterNone);
		filterNames.add("name");
		filterNames.add("shortName");
		attributeNames.add("nr");
		filterNames.add("nr");
		attributeNames.add("nrEdges");
		filterNames.add("nrEdges");
		attributeNames.add("cluster");
		filterNames.add("cluster");
		filterNames.add("key");
		filterNames.add("author");
		filterNames.add("authors");
		filterNames.add("title");
		filterNames.add("publisher");
		filterNames.add("url");
		filterNames.add("doi");
		filterNames.add("issn");
		filterNames.add("localCopy");
		attributeNames.add("year");
		filterNames.add("year");
		filterNames.add("pages");
		attributeNames.add("nrPages");
		filterNames.add("nrPages");
		attributeNames.add("nrHyperLinks");
		filterNames.add("nrHyperLinks");
		filterNames.add("background");
		filterNames.add("sourceGroup");
		filterNames.add("dataAvail");
		filterNames.add("codeAvail");
		filterNames.add("solutionAvail");
		filterNames.add("cpSystem");
		filterNames.add("classification");
		filterNames.add("constraints");
		filterNames.add("relatedTo");
		filterNames.add("openAccess");
		filterNames.add("openAccessType");
		attributeNames.add("nrConcepts");
		filterNames.add("nrConcepts");
		attributeNames.add("nrCitations");
		filterNames.add("nrCitations");
		attributeNames.add("nrReferences");
		filterNames.add("nrReferences");
		attributeNames.add("crossrefCitations");
		filterNames.add("crossrefCitations");
		attributeNames.add("crossrefReferences");
		filterNames.add("crossrefReferences");
		attributeNames.add("wosCitations");
		filterNames.add("wosCitations");
		attributeNames.add("wosReferences");
		filterNames.add("wosReferences");
		attributeNames.add("scopusCitations");
		filterNames.add("scopusCitations");
		attributeNames.add("nrCitationsCovered");
		filterNames.add("nrCitationsCovered");
		attributeNames.add("nrReferencesCovered");
		filterNames.add("nrReferencesCovered");
		attributeNames.add("percentCitationsCovered");
		filterNames.add("percentCitationsCovered");
		attributeNames.add("percentReferencesCovered");
		filterNames.add("percentReferencesCovered");
		attributeNames.add("maxCitations");
		filterNames.add("maxCitations");
		attributeNames.add("rangeCitations");
		filterNames.add("rangeCitations");
		filterNames.add("doiStatus");
		filterNames.add("crossrefStatus");
		filterNames.add("scopusStatus");
		filterNames.add("wosStatus");
		attributeNames.add("relevanceTitle");
		filterNames.add("relevanceTitle");
		attributeNames.add("relevanceAbstract");
		filterNames.add("relevanceAbstract");
		attributeNames.add("relevanceBody");
		filterNames.add("relevanceBody");
		filterNames.add("language");
		filterNames.add("keywords");
		filterNames.add("abstractText");
		filterNames.add("concept");
		filterNames.add("booktitle");
		choicesMap.put("InBook", attributeNames);
		filterMap.put("InBook", filterNames);
		attributeNames = FXCollections.observableArrayList();
		filterNames = FXCollections.observableArrayList();
		filterNames.add(filterNone);
		filterNames.add("name");
		filterNames.add("shortName");
		attributeNames.add("nr");
		filterNames.add("nr");
		attributeNames.add("nrEdges");
		filterNames.add("nrEdges");
		attributeNames.add("cluster");
		filterNames.add("cluster");
		filterNames.add("key");
		filterNames.add("author");
		filterNames.add("authors");
		filterNames.add("title");
		filterNames.add("publisher");
		filterNames.add("url");
		filterNames.add("doi");
		filterNames.add("issn");
		filterNames.add("localCopy");
		attributeNames.add("year");
		filterNames.add("year");
		filterNames.add("pages");
		attributeNames.add("nrPages");
		filterNames.add("nrPages");
		attributeNames.add("nrHyperLinks");
		filterNames.add("nrHyperLinks");
		filterNames.add("background");
		filterNames.add("sourceGroup");
		filterNames.add("dataAvail");
		filterNames.add("codeAvail");
		filterNames.add("solutionAvail");
		filterNames.add("cpSystem");
		filterNames.add("classification");
		filterNames.add("constraints");
		filterNames.add("relatedTo");
		filterNames.add("openAccess");
		filterNames.add("openAccessType");
		attributeNames.add("nrConcepts");
		filterNames.add("nrConcepts");
		attributeNames.add("nrCitations");
		filterNames.add("nrCitations");
		attributeNames.add("nrReferences");
		filterNames.add("nrReferences");
		attributeNames.add("crossrefCitations");
		filterNames.add("crossrefCitations");
		attributeNames.add("crossrefReferences");
		filterNames.add("crossrefReferences");
		attributeNames.add("wosCitations");
		filterNames.add("wosCitations");
		attributeNames.add("wosReferences");
		filterNames.add("wosReferences");
		attributeNames.add("scopusCitations");
		filterNames.add("scopusCitations");
		attributeNames.add("nrCitationsCovered");
		filterNames.add("nrCitationsCovered");
		attributeNames.add("nrReferencesCovered");
		filterNames.add("nrReferencesCovered");
		attributeNames.add("percentCitationsCovered");
		filterNames.add("percentCitationsCovered");
		attributeNames.add("percentReferencesCovered");
		filterNames.add("percentReferencesCovered");
		attributeNames.add("maxCitations");
		filterNames.add("maxCitations");
		attributeNames.add("rangeCitations");
		filterNames.add("rangeCitations");
		filterNames.add("doiStatus");
		filterNames.add("crossrefStatus");
		filterNames.add("scopusStatus");
		filterNames.add("wosStatus");
		attributeNames.add("relevanceTitle");
		filterNames.add("relevanceTitle");
		attributeNames.add("relevanceAbstract");
		filterNames.add("relevanceAbstract");
		attributeNames.add("relevanceBody");
		filterNames.add("relevanceBody");
		filterNames.add("language");
		filterNames.add("keywords");
		filterNames.add("abstractText");
		filterNames.add("concept");
		choicesMap.put("Book", attributeNames);
		filterMap.put("Book", filterNames);
		attributeNames = FXCollections.observableArrayList();
		filterNames = FXCollections.observableArrayList();
		filterNames.add(filterNone);
		filterNames.add("name");
		attributeNames.add("seqNr");
		filterNames.add("seqNr");
		filterNames.add("sequence");
		filterNames.add("author");
		filterNames.add("work");
		filterNames.add("affiliation");
		choicesMap.put("Authorship", attributeNames);
		filterMap.put("Authorship", filterNames);
		attributeNames = FXCollections.observableArrayList();
		filterNames = FXCollections.observableArrayList();
		filterNames.add(filterNone);
		filterNames.add("name");
		filterNames.add("shortName");
		attributeNames.add("nrUsed");
		filterNames.add("nrUsed");
		choicesMap.put("Affiliation", attributeNames);
		filterMap.put("Affiliation", filterNames);
		attributeNames = FXCollections.observableArrayList();
		filterNames = FXCollections.observableArrayList();
		filterNames.add(filterNone);
		filterNames.add("name");
		filterNames.add("shortName");
		filterNames.add("conferenceSeries");
		filterNames.add("name");
		filterNames.add("description");
		filterNames.add("regExpr");
		attributeNames.add("nrPapers");
		filterNames.add("nrPapers");
		attributeNames.add("nrCitations");
		filterNames.add("nrCitations");
		attributeNames.add("nrBackgroundPapers");
		filterNames.add("nrBackgroundPapers");
		attributeNames.add("nrBackgroundCitations");
		filterNames.add("nrBackgroundCitations");
		choicesMap.put("ConferenceSeries", attributeNames);
		filterMap.put("ConferenceSeries", filterNames);
		attributeNames = FXCollections.observableArrayList();
		filterNames = FXCollections.observableArrayList();
		filterNames.add(filterNone);
		filterNames.add("name");
		filterNames.add("shortName");
		filterNames.add("publisher");
		filterNames.add("issn");
		attributeNames.add("nrArticles");
		filterNames.add("nrArticles");
		attributeNames.add("nrBackgroundArticles");
		filterNames.add("nrBackgroundArticles");
		attributeNames.add("nrCitations");
		filterNames.add("nrCitations");
		attributeNames.add("nrBackgroundCitations");
		filterNames.add("nrBackgroundCitations");
		filterNames.add("isBlocked");
		choicesMap.put("Journal", attributeNames);
		filterMap.put("Journal", filterNames);
		attributeNames = FXCollections.observableArrayList();
		filterNames = FXCollections.observableArrayList();
		filterNames.add(filterNone);
		filterNames.add("name");
		filterNames.add("journal");
		filterNames.add("alias");
		filterNames.add("name");
		filterNames.add("name");
		attributeNames.add("nrWorks");
		filterNames.add("nrWorks");
		choicesMap.put("Publisher", attributeNames);
		filterMap.put("Publisher", filterNames);
		attributeNames = FXCollections.observableArrayList();
		filterNames = FXCollections.observableArrayList();
		filterNames.add(filterNone);
		filterNames.add("name");
		filterNames.add("name");
		filterNames.add("concept");
		filterNames.add("work");
		attributeNames.add("count");
		filterNames.add("count");
		filterNames.add("matchLevel");
		choicesMap.put("ConceptWork", attributeNames);
		filterMap.put("ConceptWork", filterNames);
		attributeNames = FXCollections.observableArrayList();
		filterNames = FXCollections.observableArrayList();
		filterNames.add(filterNone);
		filterNames.add("name");
		filterNames.add("oci");
		filterNames.add("citedWork");
		filterNames.add("citingWork");
		filterNames.add("cited");
		filterNames.add("citing");
		filterNames.add("creation");
		filterNames.add("timespan");
		filterNames.add("authorSC");
		filterNames.add("journalSC");
		filterNames.add("name");
		filterNames.add("oci");
		filterNames.add("citedWork");
		filterNames.add("citingWork");
		filterNames.add("cited");
		filterNames.add("citing");
		filterNames.add("creation");
		filterNames.add("timespan");
		filterNames.add("authorSC");
		filterNames.add("journalSC");
		filterNames.add("name");
		filterNames.add("doi");
		attributeNames.add("nrCited");
		filterNames.add("nrCited");
		choicesMap.put("MissingCitingWork", attributeNames);
		filterMap.put("MissingCitingWork", filterNames);
		attributeNames = FXCollections.observableArrayList();
		filterNames = FXCollections.observableArrayList();
		filterNames.add(filterNone);
		filterNames.add("name");
		filterNames.add("doi");
		attributeNames.add("nrCitations");
		filterNames.add("nrCitations");
		choicesMap.put("MissingCitedWork", attributeNames);
		filterMap.put("MissingCitedWork", filterNames);
		attributeNames = FXCollections.observableArrayList();
		filterNames = FXCollections.observableArrayList();
		filterNames.add(filterNone);
		filterNames.add("name");
		filterNames.add("key");
		filterNames.add("doi");
		filterNames.add("encoded");
		attributeNames.add("nrCited");
		filterNames.add("nrCited");
		attributeNames.add("nrCitations");
		filterNames.add("nrCitations");
		attributeNames.add("nrLinks");
		filterNames.add("nrLinks");
		attributeNames.add("year");
		filterNames.add("year");
		filterNames.add("author");
		filterNames.add("editor");
		filterNames.add("title");
		filterNames.add("publisher");
		filterNames.add("volume");
		filterNames.add("issue");
		filterNames.add("page");
		filterNames.add("chapter");
		filterNames.add("source");
		filterNames.add("abstractText");
		filterNames.add("keywords");
		filterNames.add("url");
		filterNames.add("type");
		attributeNames.add("crossrefReferences");
		filterNames.add("crossrefReferences");
		attributeNames.add("crossrefCitations");
		filterNames.add("crossrefCitations");
		attributeNames.add("knownAuthors");
		filterNames.add("knownAuthors");
		attributeNames.add("conceptWeight");
		filterNames.add("conceptWeight");
		attributeNames.add("relevance");
		filterNames.add("relevance");
		filterNames.add("isSelected");
		filterNames.add("concept");
		choicesMap.put("MissingWork", attributeNames);
		filterMap.put("MissingWork", filterNames);
		attributeNames = FXCollections.observableArrayList();
		filterNames = FXCollections.observableArrayList();
		filterNames.add(filterNone);
		filterNames.add("name");
		filterNames.add("author1");
		filterNames.add("author2");
		attributeNames.add("nrWorks");
		filterNames.add("nrWorks");
		attributeNames.add("nrCites");
		filterNames.add("nrCites");
		attributeNames.add("earliestYear");
		filterNames.add("earliestYear");
		attributeNames.add("latestYear");
		filterNames.add("latestYear");
		choicesMap.put("Coauthor", attributeNames);
		filterMap.put("Coauthor", filterNames);
		attributeNames = FXCollections.observableArrayList();
		filterNames = FXCollections.observableArrayList();
		filterNames.add(filterNone);
		filterNames.add("name");
		filterNames.add("work1");
		filterNames.add("work2");
		attributeNames.add("ref1");
		filterNames.add("ref1");
		attributeNames.add("ref2");
		filterNames.add("ref2");
		attributeNames.add("nrSharedReferences");
		filterNames.add("nrSharedReferences");
		attributeNames.add("cite1");
		filterNames.add("cite1");
		attributeNames.add("cite2");
		filterNames.add("cite2");
		attributeNames.add("nrSharedCitations");
		filterNames.add("nrSharedCitations");
		attributeNames.add("similarityRef");
		filterNames.add("similarityRef");
		attributeNames.add("similarityCite");
		filterNames.add("similarityCite");
		attributeNames.add("similarityConcept");
		filterNames.add("similarityConcept");
		attributeNames.add("similarity");
		filterNames.add("similarity");
		attributeNames.add("dotProduct");
		filterNames.add("dotProduct");
		attributeNames.add("cosine");
		filterNames.add("cosine");
		choicesMap.put("Similarity", attributeNames);
		filterMap.put("Similarity", filterNames);
		attributeNames = FXCollections.observableArrayList();
		filterNames = FXCollections.observableArrayList();
		filterNames.add(filterNone);
		filterNames.add("name");
		filterNames.add("key");
		filterNames.add("work");
		filterNames.add("referredWork");
		filterNames.add("missingWork");
		filterNames.add("missingCross");
		attributeNames.add("year");
		filterNames.add("year");
		filterNames.add("author");
		filterNames.add("source");
		filterNames.add("title");
		choicesMap.put("CrossReference", attributeNames);
		filterMap.put("CrossReference", filterNames);
		attributeNames = FXCollections.observableArrayList();
		filterNames = FXCollections.observableArrayList();
		filterNames.add(filterNone);
		filterNames.add("name");
		filterNames.add("key");
		filterNames.add("work");
		filterNames.add("referredWork");
		filterNames.add("missingWork");
		filterNames.add("missingCross");
		attributeNames.add("year");
		filterNames.add("year");
		filterNames.add("author");
		filterNames.add("source");
		filterNames.add("title");
		choicesMap.put("UncategorizedReference", attributeNames);
		filterMap.put("UncategorizedReference", filterNames);
		attributeNames = FXCollections.observableArrayList();
		filterNames = FXCollections.observableArrayList();
		filterNames.add(filterNone);
		filterNames.add("name");
		filterNames.add("key");
		filterNames.add("work");
		filterNames.add("referredWork");
		filterNames.add("missingWork");
		filterNames.add("missingCross");
		attributeNames.add("year");
		filterNames.add("year");
		filterNames.add("author");
		filterNames.add("source");
		filterNames.add("title");
		filterNames.add("doi");
		choicesMap.put("DoiReference", attributeNames);
		filterMap.put("DoiReference", filterNames);
		attributeNames = FXCollections.observableArrayList();
		filterNames = FXCollections.observableArrayList();
		filterNames.add(filterNone);
		filterNames.add("name");
		filterNames.add("doi");
		attributeNames.add("count");
		filterNames.add("count");
		attributeNames.add("year");
		filterNames.add("year");
		filterNames.add("author");
		filterNames.add("source");
		filterNames.add("title");
		filterNames.add("url");
		filterNames.add("type");
		attributeNames.add("crossrefReferences");
		filterNames.add("crossrefReferences");
		attributeNames.add("crossrefCitations");
		filterNames.add("crossrefCitations");
		choicesMap.put("MissingCross", attributeNames);
		filterMap.put("MissingCross", filterNames);
		attributeNames = FXCollections.observableArrayList();
		filterNames = FXCollections.observableArrayList();
		filterNames.add(filterNone);
		filterNames.add("name");
		filterNames.add("description");
		attributeNames.add("nrWorks");
		filterNames.add("nrWorks");
		attributeNames.add("fromFlows");
		filterNames.add("fromFlows");
		attributeNames.add("toFlows");
		filterNames.add("toFlows");
		choicesMap.put("SourceGroup", attributeNames);
		filterMap.put("SourceGroup", filterNames);
		attributeNames = FXCollections.observableArrayList();
		filterNames = FXCollections.observableArrayList();
		filterNames.add(filterNone);
		filterNames.add("name");
		filterNames.add("from");
		filterNames.add("to");
		attributeNames.add("value");
		filterNames.add("value");
		attributeNames.add("normalized");
		filterNames.add("normalized");
		choicesMap.put("ReferenceFlow", attributeNames);
		filterMap.put("ReferenceFlow", filterNames);
		attributeNames = FXCollections.observableArrayList();
		filterNames = FXCollections.observableArrayList();
		filterNames.add(filterNone);
		filterNames.add("name");
		filterNames.add("inst");
		filterNames.add("scopusCity");
		attributeNames.add("workCount");
		filterNames.add("workCount");
		attributeNames.add("collabCount");
		filterNames.add("collabCount");
		attributeNames.add("domesticCollabCount");
		filterNames.add("domesticCollabCount");
		attributeNames.add("internationalCollabCount");
		filterNames.add("internationalCollabCount");
		attributeNames.add("collabFraction");
		filterNames.add("collabFraction");
		attributeNames.add("domesticCollabFraction");
		filterNames.add("domesticCollabFraction");
		attributeNames.add("internationalCollabFraction");
		filterNames.add("internationalCollabFraction");
		attributeNames.add("collabPercentage");
		filterNames.add("collabPercentage");
		attributeNames.add("internationalPercentage");
		filterNames.add("internationalPercentage");
		filterNames.add("scopusCity.scopusCountry");
		choicesMap.put("ScopusAffiliation", attributeNames);
		filterMap.put("ScopusAffiliation", filterNames);
		attributeNames = FXCollections.observableArrayList();
		filterNames = FXCollections.observableArrayList();
		filterNames.add(filterNone);
		filterNames.add("name");
		filterNames.add("work");
		filterNames.add("scopusAffiliation");
		filterNames.add("scopusAffiliation.scopusCity");
		filterNames.add("scopusAffiliation.scopusCity.scopusCountry");
		filterNames.add("name");
		filterNames.add("scopusCountry");
		attributeNames.add("workCount");
		filterNames.add("workCount");
		choicesMap.put("ScopusCity", attributeNames);
		filterMap.put("ScopusCity", filterNames);
		attributeNames = FXCollections.observableArrayList();
		filterNames = FXCollections.observableArrayList();
		filterNames.add(filterNone);
		filterNames.add("name");
		attributeNames.add("workCount");
		filterNames.add("workCount");
		attributeNames.add("nrWorks");
		filterNames.add("nrWorks");
		choicesMap.put("ScopusCountry", attributeNames);
		filterMap.put("ScopusCountry", filterNames);
		attributeNames = FXCollections.observableArrayList();
		filterNames = FXCollections.observableArrayList();
		filterNames.add(filterNone);
		filterNames.add("name");
		filterNames.add("fileName");
		filterNames.add("name");
		filterNames.add("affiliation1");
		filterNames.add("affiliation2");
		filterNames.add("work");
		attributeNames.add("fraction");
		filterNames.add("fraction");
		choicesMap.put("CollabWork", attributeNames);
		filterMap.put("CollabWork", filterNames);
		attributeNames = FXCollections.observableArrayList();
		filterNames = FXCollections.observableArrayList();
		filterNames.add(filterNone);
		filterNames.add("name");
		filterNames.add("affiliation1");
		filterNames.add("affiliation2");
		attributeNames.add("count");
		filterNames.add("count");
		attributeNames.add("fraction");
		filterNames.add("fraction");
		choicesMap.put("CollabCount", attributeNames);
		filterMap.put("CollabCount", filterNames);
		attributeNames = FXCollections.observableArrayList();
		filterNames = FXCollections.observableArrayList();
		filterNames.add(filterNone);
		filterNames.add("name");
		filterNames.add("country1");
		filterNames.add("country2");
		attributeNames.add("count");
		filterNames.add("count");
		choicesMap.put("CountryCollab", attributeNames);
		filterMap.put("CountryCollab", filterNames);
		attributeNames = FXCollections.observableArrayList();
		filterNames = FXCollections.observableArrayList();
		filterNames.add(filterNone);
		filterNames.add("name");
		filterNames.add("unicode");
		filterNames.add("latex");
		filterNames.add("name");
		filterNames.add("reason");
		filterNames.add("author1");
		filterNames.add("author2");
		filterNames.add("work1");
		filterNames.add("work2");
		filterNames.add("name");
		filterNames.add("shortName");
		attributeNames.add("nr");
		filterNames.add("nr");
		filterNames.add("key");
		filterNames.add("workType");
		filterNames.add("editor");
		filterNames.add("author");
		filterNames.add("authors");
		attributeNames.add("workCount");
		filterNames.add("workCount");
		filterNames.add("title");
		filterNames.add("source");
		filterNames.add("url");
		filterNames.add("doi");
		attributeNames.add("year");
		filterNames.add("year");
		attributeNames.add("relevance");
		filterNames.add("relevance");
		filterNames.add("isFound");
		filterNames.add("isSelected");
		filterNames.add("concept");
		filterNames.add("keywords");
		filterNames.add("abstractText");
		filterNames.add("volume");
		filterNames.add("issue");
		filterNames.add("page");
		filterNames.add("chapter");
		filterNames.add("publisher");
		choicesMap.put("OtherWork", attributeNames);
		filterMap.put("OtherWork", filterNames);
		attributeNames = FXCollections.observableArrayList();
		filterNames = FXCollections.observableArrayList();
		filterNames.add(filterNone);
		ObservableList<String> classes = FXCollections.observableArrayList();
		classes.addAll(choicesMap.keySet());
		classChoiceBox.getItems().addAll(classes);
		ObservableList<String> compOps = FXCollections.observableArrayList();
		compOps.addAll(filterComparisons);
		filterComparisonBox.getItems().addAll(compOps);
		chart.setLegendVisible(false);
	}

	@SuppressWarnings({ "rawtypes", "unchecked" })
	public void drawChart() {
		String className = classChoiceBox.getSelectionModel().getSelectedItem();
		String attributeXName = attributeChoiceBox.getSelectionModel().getSelectedItem();
		String attributeYName = attributeYChoiceBox.getSelectionModel().getSelectedItem();
		String attributeFilterName = attributeFilterBox.getSelectionModel().getSelectedItem();
		String filterComparisonName = filterComparisonBox.getSelectionModel().getSelectedItem();
		String filterTextName = filterTextField.getText();
		String attributeGroupName = attributeGroupBox.getSelectionModel().getSelectedItem();
		if (className == null || attributeXName == null|| attributeYName == null) {
			return;
		}
		try {
			ObservableList objectList = null;
			if (className.equals("Scenario")) {
				objectList = mainApp.getScenarioData();
			}
			else if (className.equals("ApplicationDifference")) {
				objectList = mainApp.getApplicationDifferenceData();
			}
			else if (className.equals("ApplicationWarning")) {
				objectList = mainApp.getApplicationWarningData();
			}
			else if (className.equals("ConceptType")) {
				objectList = mainApp.getConceptTypeData();
			}
			else if (className.equals("Concept")) {
				objectList = mainApp.getConceptData();
			}
			else if (className.equals("Acronym")) {
				objectList = mainApp.getAcronymData();
			}
			else if (className.equals("Author")) {
				objectList = mainApp.getAuthorData();
			}
			else if (className.equals("Work")) {
				objectList = mainApp.getWorkData();
			}
			else if (className.equals("Paper")) {
				objectList = mainApp.getPaperData();
			}
			else if (className.equals("Article")) {
				objectList = mainApp.getArticleData();
			}
			else if (className.equals("PhDThesis")) {
				objectList = mainApp.getPhDThesisData();
			}
			else if (className.equals("InCollection")) {
				objectList = mainApp.getInCollectionData();
			}
			else if (className.equals("InBook")) {
				objectList = mainApp.getInBookData();
			}
			else if (className.equals("Book")) {
				objectList = mainApp.getBookData();
			}
			else if (className.equals("Authorship")) {
				objectList = mainApp.getAuthorshipData();
			}
			else if (className.equals("Affiliation")) {
				objectList = mainApp.getAffiliationData();
			}
			else if (className.equals("Proceedings")) {
				objectList = mainApp.getProceedingsData();
			}
			else if (className.equals("ConferenceSeries")) {
				objectList = mainApp.getConferenceSeriesData();
			}
			else if (className.equals("Journal")) {
				objectList = mainApp.getJournalData();
			}
			else if (className.equals("JournalAlias")) {
				objectList = mainApp.getJournalAliasData();
			}
			else if (className.equals("School")) {
				objectList = mainApp.getSchoolData();
			}
			else if (className.equals("Publisher")) {
				objectList = mainApp.getPublisherData();
			}
			else if (className.equals("Collection")) {
				objectList = mainApp.getCollectionData();
			}
			else if (className.equals("ConceptWork")) {
				objectList = mainApp.getConceptWorkData();
			}
			else if (className.equals("Citation")) {
				objectList = mainApp.getCitationData();
			}
			else if (className.equals("Reference")) {
				objectList = mainApp.getReferenceData();
			}
			else if (className.equals("MissingCitingWork")) {
				objectList = mainApp.getMissingCitingWorkData();
			}
			else if (className.equals("MissingCitedWork")) {
				objectList = mainApp.getMissingCitedWorkData();
			}
			else if (className.equals("MissingWork")) {
				objectList = mainApp.getMissingWorkData();
			}
			else if (className.equals("Coauthor")) {
				objectList = mainApp.getCoauthorData();
			}
			else if (className.equals("Similarity")) {
				objectList = mainApp.getSimilarityData();
			}
			else if (className.equals("CrossReference")) {
				objectList = mainApp.getCrossReferenceData();
			}
			else if (className.equals("UncategorizedReference")) {
				objectList = mainApp.getUncategorizedReferenceData();
			}
			else if (className.equals("DoiReference")) {
				objectList = mainApp.getDoiReferenceData();
			}
			else if (className.equals("MissingCross")) {
				objectList = mainApp.getMissingCrossData();
			}
			else if (className.equals("SourceGroup")) {
				objectList = mainApp.getSourceGroupData();
			}
			else if (className.equals("ReferenceFlow")) {
				objectList = mainApp.getReferenceFlowData();
			}
			else if (className.equals("ScopusAffiliation")) {
				objectList = mainApp.getScopusAffiliationData();
			}
			else if (className.equals("WorkAffiliation")) {
				objectList = mainApp.getWorkAffiliationData();
			}
			else if (className.equals("ScopusCity")) {
				objectList = mainApp.getScopusCityData();
			}
			else if (className.equals("ScopusCountry")) {
				objectList = mainApp.getScopusCountryData();
			}
			else if (className.equals("Orphan")) {
				objectList = mainApp.getOrphanData();
			}
			else if (className.equals("CollabWork")) {
				objectList = mainApp.getCollabWorkData();
			}
			else if (className.equals("CollabCount")) {
				objectList = mainApp.getCollabCountData();
			}
			else if (className.equals("CountryCollab")) {
				objectList = mainApp.getCountryCollabData();
			}
			else if (className.equals("Translator")) {
				objectList = mainApp.getTranslatorData();
			}
			else if (className.equals("AuthorDouble")) {
				objectList = mainApp.getAuthorDoubleData();
			}
			else if (className.equals("OtherWork")) {
				objectList = mainApp.getOtherWorkData();
			}
			if (objectList != null) {
				XYChart.Series series = new XYChart.Series();
				for (Object obj : objectList) {
					Object objX = deref(obj,attributeXName);
					Object objY = deref(obj,attributeYName);
					Object objFilter = obj;
					if(attributeFilterName != null && !attributeFilterName.equals(filterNone)) {
						objFilter=deref(obj,attributeFilterName);
					}
					if (keepFiltered(objFilter,attributeFilterName,filterComparisonName,filterTextName) && Number.class.isAssignableFrom(objX.getClass()) && Number.class.isAssignableFrom(objY.getClass())) {
						series.getData().add(new XYChart.Data(objX,objY));
					}
				}
				chart.getData().clear();
				chart.getData().add(series);
			}
		}
		catch (Exception e) {
			e.printStackTrace();
		}
	}
}
